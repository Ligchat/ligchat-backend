// <auto-generated />
using System;
using LigChat.Backend.Web.Extensions.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace tests_.Migrations
{
    [DbContext(typeof(DatabaseConfiguration))]
    partial class DatabaseConfigurationModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("LigChat.Backend.Domain.Entities.Attachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("conteudo");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_criacao");

                    b.Property<int>("MessageSchedulingId")
                        .HasColumnType("int")
                        .HasColumnName("mensagem_agendada_id");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("tipo");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_atualizacao");

                    b.HasKey("Id");

                    b.HasIndex("MessageSchedulingId");

                    b.ToTable("attachments");
                });

            modelBuilder.Entity("LigChat.Backend.Domain.Entities.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.Property<string>("Notes")
                        .HasColumnType("longtext")
                        .HasColumnName("notes");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("number");

                    b.Property<string>("ProfilePicUrl")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("profile_pic_url");

                    b.Property<int?>("SectorId")
                        .HasColumnType("int")
                        .HasColumnName("setor_id");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status");

                    b.Property<int>("TagId")
                        .HasColumnType("int")
                        .HasColumnName("tag_id");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("whatsapp_contacts");
                });

            modelBuilder.Entity("LigChat.Backend.Domain.Entities.Flow", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_criacao");

                    b.Property<double>("Ctr")
                        .HasColumnType("double")
                        .HasColumnName("ctr");

                    b.Property<int>("Executions")
                        .HasColumnType("int")
                        .HasColumnName("executions");

                    b.Property<int>("FolderId")
                        .HasColumnType("int")
                        .HasColumnName("pasta_fluxo");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nome_fluxo");

                    b.Property<int>("SectorId")
                        .HasColumnType("int")
                        .HasColumnName("id_setor");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_atualizacao");

                    b.HasKey("Id");

                    b.HasIndex("FolderId");

                    b.ToTable("fluxos");
                });

            modelBuilder.Entity("LigChat.Backend.Domain.Entities.Folder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_criacao");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nome_pasta");

                    b.Property<int?>("SectorId")
                        .HasColumnType("int")
                        .HasColumnName("sector_id");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_atualizacao");

                    b.HasKey("Id");

                    b.ToTable("pastas");
                });

            modelBuilder.Entity("LigChat.Backend.Domain.Entities.MessageScheduling", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_criacao");

                    b.Property<int?>("FlowId")
                        .HasColumnType("int")
                        .HasColumnName("id_fluxo");

                    b.Property<string>("MessageText")
                        .HasColumnType("longtext")
                        .HasColumnName("mensagem_de_texto");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("nome");

                    b.Property<int?>("SectorId")
                        .HasColumnType("int")
                        .HasColumnName("setor_id");

                    b.Property<DateTime?>("SendDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_envio");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_atualizacao");

                    b.HasKey("Id");

                    b.ToTable("mensagens_agendadas");
                });

            modelBuilder.Entity("LigChat.Backend.Domain.Entities.Sector", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccessToken")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("token_acesso");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_criacao");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("descricao_setor");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("nome_setor");

                    b.Property<string>("PhoneNumberId")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("numero");

                    b.Property<bool?>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_atualizacao");

                    b.Property<int?>("UserBusinessId")
                        .HasColumnType("int")
                        .HasColumnName("id_negocio_usuario");

                    b.HasKey("Id");

                    b.ToTable("setores");
                });

            modelBuilder.Entity("LigChat.Backend.Domain.Entities.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_criacao");

                    b.Property<string>("Description")
                        .HasColumnType("longtext")
                        .HasColumnName("descricao_etiqueta");

                    b.Property<int?>("MessageSchedulingId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nome_etiqueta");

                    b.Property<int?>("SectorId")
                        .HasColumnType("int")
                        .HasColumnName("id_setor");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_atualizacao");

                    b.HasKey("Id");

                    b.HasIndex("MessageSchedulingId");

                    b.ToTable("etiquetas");
                });

            modelBuilder.Entity("LigChat.Backend.Domain.Entities.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_criacao");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nome");

                    b.Property<string>("Permissions")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("permissoes");

                    b.Property<int?>("SectorId")
                        .HasColumnType("int")
                        .HasColumnName("id_setor");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_atualizacao");

                    b.HasKey("Id");

                    b.ToTable("times");
                });

            modelBuilder.Entity("LigChat.Backend.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AvatarUrl")
                        .HasColumnType("longtext")
                        .HasColumnName("avatar_url");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_criacao");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("nome");

                    b.Property<string>("PhoneWhatsapp")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("phone_whatsapp");

                    b.Property<int?>("SectorId")
                        .HasColumnType("int")
                        .HasColumnName("setor_id");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_atualizacao");

                    b.Property<string>("VerificationCode")
                        .HasColumnType("longtext")
                        .HasColumnName("verification_code");

                    b.Property<DateTime?>("VerificationCodeExpiresAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("verification_code_expires_at");

                    b.HasKey("Id");

                    b.ToTable("usuarios");
                });

            modelBuilder.Entity("LigChat.Backend.Domain.Entities.Webhook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_criacao");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nome");

                    b.Property<int?>("SectorId")
                        .HasColumnType("int")
                        .HasColumnName("id_setor");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status");

                    b.Property<string>("TokenKey")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("token_key");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_atualizacao");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("varchar(2048)")
                        .HasColumnName("url");

                    b.HasKey("Id");

                    b.ToTable("webhooks");
                });

            modelBuilder.Entity("LigChat.Backend.Domain.Entities.WebhookEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_criacao");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("tipo_evento");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nome");

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("payload");

                    b.Property<int?>("SectorId")
                        .HasColumnType("int")
                        .HasColumnName("setor_id");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_atualizacao");

                    b.Property<int>("WebhookId")
                        .HasColumnType("int")
                        .HasColumnName("webhook_id");

                    b.HasKey("Id");

                    b.ToTable("webhook_events");
                });

            modelBuilder.Entity("tests_.src.Domain.Entities.BusinessHours", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClosingTime")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DayOfWeek")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsOpen")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("OpeningTime")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BusinessHours");
                });

            modelBuilder.Entity("tests_.src.Domain.Entities.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ColumnId")
                        .HasColumnType("int")
                        .HasColumnName("column_id");

                    b.Property<int>("ContactId")
                        .HasColumnType("int")
                        .HasColumnName("contact_id");

                    b.Property<DateTime?>("LastContact")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_contact");

                    b.Property<int?>("TagId")
                        .HasColumnType("int")
                        .HasColumnName("tag_id");

                    b.HasKey("Id");

                    b.HasIndex("ColumnId");

                    b.HasIndex("ContactId");

                    b.ToTable("cards");
                });

            modelBuilder.Entity("tests_.src.Domain.Entities.Coluna", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<int>("SectorId")
                        .HasColumnType("int")
                        .HasColumnName("sector_id");

                    b.HasKey("Id");

                    b.ToTable("colunas");
                });

            modelBuilder.Entity("tests_.src.Domain.Entities.Contato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AttachmentId")
                        .HasColumnType("int")
                        .HasColumnName("attachment_id");

                    b.Property<string>("GeneralInfo")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("general_info");

                    b.Property<int?>("MessageId")
                        .HasColumnType("int")
                        .HasColumnName("message_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("phone");

                    b.HasKey("Id");

                    b.ToTable("contatos");
                });

            modelBuilder.Entity("tests_.src.Domain.Entities.Messeageging", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("content");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("From")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("from");

                    b.Property<bool>("IsSent")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_sent");

                    b.Property<string>("MediaFilename")
                        .HasColumnType("longtext")
                        .HasColumnName("media_filename");

                    b.Property<string>("MediaMimeType")
                        .HasColumnType("longtext")
                        .HasColumnName("media_mimetype");

                    b.Property<string>("MediaUrl")
                        .HasColumnType("longtext")
                        .HasColumnName("media_url");

                    b.Property<string>("MessageType")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("message_type");

                    b.Property<string>("Name")
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<string>("ProfilePicUrl")
                        .HasColumnType("longtext")
                        .HasColumnName("profile_pic_url");

                    b.Property<string>("To")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("to");

                    b.Property<int>("WhatsappContactId")
                        .HasColumnType("int")
                        .HasColumnName("whatsapp_contact_id");

                    b.HasKey("Id");

                    b.ToTable("messages");
                });

            modelBuilder.Entity("tests_.src.Domain.Entities.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("permissoes");
                });

            modelBuilder.Entity("tests_.src.Domain.Entities.UserPermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PermissionId")
                        .HasColumnType("int")
                        .HasColumnName("permission_id");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("PermissionId");

                    b.HasIndex("UserId");

                    b.ToTable("usuarios_permissoes");
                });

            modelBuilder.Entity("tests_.src.Domain.Entities.WhatsAppAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsConnected")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_connected");

                    b.Property<string>("Number")
                        .HasColumnType("longtext")
                        .HasColumnName("number");

                    b.Property<string>("QrCode")
                        .HasColumnType("longtext")
                        .HasColumnName("qr_code");

                    b.Property<string>("SessionId")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("session_id");

                    b.HasKey("Id");

                    b.ToTable("whatsapp_accounts");
                });

            modelBuilder.Entity("tests_.src.Domain.Entities.WhatsAppIntegrationSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApiKey")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ApiSecret")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("SectorId")
                        .HasColumnType("int");

                    b.Property<string>("ValidatedPhone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("WebhookToken")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("WhatsAppIntegrationSettings");
                });

            modelBuilder.Entity("tests_.src.Domain.Entities.WhatsAppMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Caption")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("From")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MediaId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MessageId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MessageType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MimeType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("Timestamp")
                        .HasColumnType("bigint");

                    b.Property<string>("To")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("WhatsAppMessages");
                });

            modelBuilder.Entity("LigChat.Backend.Domain.Entities.Attachment", b =>
                {
                    b.HasOne("LigChat.Backend.Domain.Entities.MessageScheduling", "MessageScheduling")
                        .WithMany("Attachments")
                        .HasForeignKey("MessageSchedulingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MessageScheduling");
                });

            modelBuilder.Entity("LigChat.Backend.Domain.Entities.Flow", b =>
                {
                    b.HasOne("LigChat.Backend.Domain.Entities.Folder", "Folder")
                        .WithMany()
                        .HasForeignKey("FolderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Folder");
                });

            modelBuilder.Entity("LigChat.Backend.Domain.Entities.Tag", b =>
                {
                    b.HasOne("LigChat.Backend.Domain.Entities.MessageScheduling", null)
                        .WithMany("Tags")
                        .HasForeignKey("MessageSchedulingId");
                });

            modelBuilder.Entity("tests_.src.Domain.Entities.Card", b =>
                {
                    b.HasOne("tests_.src.Domain.Entities.Coluna", "Column")
                        .WithMany("Cards")
                        .HasForeignKey("ColumnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("tests_.src.Domain.Entities.Contato", "Contato")
                        .WithMany()
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Column");

                    b.Navigation("Contato");
                });

            modelBuilder.Entity("tests_.src.Domain.Entities.UserPermission", b =>
                {
                    b.HasOne("tests_.src.Domain.Entities.Permission", "Permission")
                        .WithMany("UserPermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LigChat.Backend.Domain.Entities.User", "User")
                        .WithMany("UserPermissions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LigChat.Backend.Domain.Entities.MessageScheduling", b =>
                {
                    b.Navigation("Attachments");

                    b.Navigation("Tags");
                });

            modelBuilder.Entity("LigChat.Backend.Domain.Entities.User", b =>
                {
                    b.Navigation("UserPermissions");
                });

            modelBuilder.Entity("tests_.src.Domain.Entities.Coluna", b =>
                {
                    b.Navigation("Cards");
                });

            modelBuilder.Entity("tests_.src.Domain.Entities.Permission", b =>
                {
                    b.Navigation("UserPermissions");
                });
#pragma warning restore 612, 618
        }
    }
}
